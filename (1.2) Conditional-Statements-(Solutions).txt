// ======== ======== Problem-01
// using if else 
function checkEvenOdd(num){
    let number;
    if(num % 2 === 0){
        number = `${num} is a even`;
    } else {
        number = `${num} is a odd`;
    }
    console.log(number);
}
checkEvenOdd(10);
checkEvenOdd(11);

// using switch case
function checkEvenOdd(num){
    let number;
    switch(num % 2) {
        case 0: 
            number = `${num} is a even`;
            break;
        case 1:
            number = `${num} is an odd`;
            break;
        default:
            number = 'Invalid input';
    }
    console.log(number);
}
checkEvenOdd(10);
checkEvenOdd(11);

// using ternary operators
function checkEvenOdd(num){
    let number = num % 2 === 0 ? `${num} is even` : `${num} is odd`;
    console.log(number);
}
checkEvenOdd(10);
checkEvenOdd(11);

// ======== ======== Problem-02
// using if else
function checkNegativePositive(num){
    let number;
    if(num > 0){
        number = `${num} is positive`
    } else if(num < 0){
        number = `${num} is negative`
    } else{
        number = `${num} is neither positive nor negative`
    }
    console.log(number);
}
checkNegativePositive(3);
checkNegativePositive(-3);
checkNegativePositive(0);

// using switch case
function checkNegativePositive(num){
    let number;
    switch(Math.sign(num)) {
        case 1:
            number = `${num} is positive`
            break;
        case -1:
            number = `${num} is negative`
            break;
        case 0:
            number = `${num} is neither positive nor negative`
    }
    console.log(number);
}
checkNegativePositive(3);
checkNegativePositive(-3);
checkNegativePositive(0);

// using ternary operator
function checkNegativePositive(num){
    let number = num > 0 ? `${num} is positive` :
                    num < 0 ? `${num} is negative`:
                        `${num} is neither negative or positive`;
    console.log(number);
}
checkNegativePositive(3);
checkNegativePositive(-3);
checkNegativePositive(0);

// ======== ======== Problem-03
// using if else
function maxBetween(a, b){
    let maxValue;
    if(a > b){
        maxValue = `${a} is max`
    } else{
        maxValue = `${b} is max`
    }
    console.log(maxValue);
}
maxBetween(10, 12);
maxBetween(12, 10);

// using switch case
function maxBetween(a, b){
    let maxValue;
    switch(a < b){
        case true:
            maxValue = `${b} is max`
            break;
        case false:
            maxValue = `${a} is max`
            break;
    }
    console.log(maxValue);
}
maxBetween(10, 12);
maxBetween(12, 10);

// using ternary operator
function maxBetween(a, b){
    let maxValue = a > b ? `${a} is max` : `${b} is max`;
    console.log(maxValue);
}
maxBetween(10, 12);
maxBetween(12, 10);

// ======== ======== Problem-04
// using if else
function minBetween(a, b, c) {
    let min = a;
    let storeageMin;
    let minValue;
    if (min < b) {
        storeageMin = min;
        if (storeageMin < c) {
            minValue = `${storeageMin} is min`;
        } else {
            minValue = `${c} is min`;
        }
    } else if (min < c) {
        storeageMin = min;
        if (storeageMin < b) {
            minValue = `${storeageMin} is min`;
        } else {
            minValue = `${b} is min`
        }
    } else if(c < min){
        storeageMin = c;
        if(storeageMin < b){
            minValue = `${storeageMin} is min`;
        } else {
            minValue = `${b} is min`
        }
    }
    console.log(minValue);
}
minBetween(10, 12, 14);
minBetween(14, 12, 10);
minBetween(14, 10, 12);

// using switch case
function minBetween() {
    const numbers = Array.from(arguments);
    let min = numbers[0];
    
    for(let i = 0; i < numbers.length; i++){
        switch(true){
            case numbers[i] < min:
                min = numbers[i];
                break;
        }
    }
    console.log(min);
}
minBetween(10, 12, 14);
minBetween(14, 12, 10);
minBetween(14, 10, 12);

// using ternary operator
    coming sooon....

// ======== ======== Problem-05
// using if else
function checkDivisible(num) {
    let result;
    if(num % 5 === 0 || num % 11 === 0){
        result = 'Yes,this num is divisible by 5 or 11';
    } else {
        result = 'No, this number is divisible neither 5 nor 11';
    }
    console.log(result)
}
checkDivisible(5);
checkDivisible(11);
checkDivisible(12);

// using switch case
function checkDivisible(num) {
    switch (true) {
        case num % 5 === 0 || num % 11 === 0:
            console.log('Yes, this num is divisible by 5 or 11');
            break;
        default:
            console.log('No, this num is neither divisible by 5 nor 11')
    }
}
checkDivisible(5);
checkDivisible(11);
checkDivisible(12);

// using ternary operator
function checkDivisible(num) {
    const check = num % 5 === 0 || num % 11 === 0 ? `${num} is divisible by 5 or 11` :
                    `${num} is neither divisible by 5 nor 11`;
    console.log(check);
}
checkDivisible(5);
checkDivisible(11);
checkDivisible(12);

// ======== ======== Problem-06
// using if else
function checkEvenAndBetween(num) {
    let result;
    if(num > 100 && num < 200 && num % 2 === 0){
        result = "Number is even and it is in between 100 & 200";
    } else {
        result = "Condition Not Fulfilled";
    }
    console.log(result)
}
checkEvenAndBetween(102);
checkEvenAndBetween(50);

// using switch case
function checkEvenAndBetween(num) {
    switch(true){
        case num > 100 && num < 200 && num % 2 === 0:
            console.log('Number is even and it is in between 100 & 200');
            break;
        default:
            console.log('Condition Not Fulfilled');
            break;
    }
}
checkEvenAndBetween(102);
checkEvenAndBetween(50);

// using ternary operator
function checkEvenAndBetween(num) {
    const result = num > 100 && num < 200 && num % 2 === 0 ? "Number is even and it is in between 100 & 200" :
                    "Condition Not Fulfilled";
    console.log(result)
}
checkEvenAndBetween(102);
checkEvenAndBetween(50);

// ======== ======== Problem-07
function findDay(th) {
    let expectedDay;
    const days = ['Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];
    for(let i = 0; i < days.length; i++){
        expectedDay = days[th - 1]
    }
    console.log(expectedDay);
}
findDay(1);
findDay(2);
findDay(3);
findDay(4);
findDay(5);
findDay(6);
findDay(7);

// ======== ======== Problem-08, 09, 10 easy
// ======== ======== Problem-11
// using if else
function checkUpperLower(char) {
    if(isUpperCase(char)){
        console.log('This is UpperCase')
    } else {
        console.log('This is LowerCase')
    }


}
checkUpperLower('D');
checkUpperLower('d');

function isUpperCase(char){
    return char === char.toUpperCase();
}

// using switch case
function checkUpperLower(char) {
    switch(true){
        case isUpperCase(char):
            console.log('This is UpperCase');
            break;
        default:
            console.log('This is LowerCase');
            break;
    }
}
checkUpperLower('D');
checkUpperLower('d');

function isUpperCase(char){
    return char === char.toUpperCase()
}

// using ternary operator
function checkUpperLower(char) {
    const result = isUpperCase(char) ? 'This is UpperCase' : 'This is LowerCase';
    console.log(result);
}
checkUpperLower('D');
checkUpperLower('d');

function isUpperCase(char){
    return char === char.toUpperCase()
}

// ======== ======== Problem-12
// using if else
function checkAlphabetDigit(char){
    if(isAlphabet(char)){
        console.log('Alphabet');
    } else if(isDigit(char)){
        console.log('Digit');
    } else{
        console.log('Special Character');
    }
}
checkAlphabetDigit('H');
checkAlphabetDigit(7);
checkAlphabetDigit('$');

function isAlphabet(char){
    return /^[a-zA-Z]$/.test(char);
}
function isDigit(char){
    return /^[0-9]$/.test(char);
}

// using switch case
function checkAlphabetDigit(char){
    switch(true){
        case isAlphabet(char):
            console.log('Alphabet');
            break;
        case isDigit(char):
            console.log('Digit');
            break;
        default:
            console.log('Special Character');
            break;
    }
}
checkAlphabetDigit('H');
checkAlphabetDigit(7);
checkAlphabetDigit('$');

function isAlphabet(char){
    return /^[a-zA-Z]$/.test(char);
}
function isDigit(char){
    return /^[0-9]$/.test(char);
}

// using ternary operator
function checkAlphabetDigit(char){
    const result = isAlphabet(char) ? 'Alphabet' :
                        isDigit(char) ? 'Digit' :
                            'Sepcial Character';
    console.log(result);
}
checkAlphabetDigit('H');
checkAlphabetDigit(7);
checkAlphabetDigit('$');

function isAlphabet(char){
    return /^[a-zA-Z]$/.test(char);
}
function isDigit(char){
    return /^[0-9]$/.test(char);
}

// ======== ======== Problem-13
// using if else
function countDigit(number){
    const numberString = number.toString();
    const digitArray = numberString.split('');

    let totalDigit = 0;
    for(const each of digitArray){
        totalDigit = totalDigit + 1;
    }
    console.log(totalDigit);
}
countDigit(5235);

// ======== ======== Problem-14
// using if else
function isLeapYear(year) {
    if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) {
        console.log('Leap Year');
    } else {
        console.log('Not Leap Year');
    }
}
isLeapYear(2000);
isLeapYear(2004);
isLeapYear(1900);
isLeapYear(2021);




